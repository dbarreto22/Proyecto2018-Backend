/**
 * This file was generated by the JPA Modeler
 */
package com.miudelar.server.logic.entities;

import com.miudelar.server.logic.datatypes.DtCarrera;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.*;

/**
 * @author Windows XP
 */
//@XmlAccessorType(XmlAccessType.FIELD)
@Entity
//@NamedQueries({
//    @NamedQuery(name = "Carrera.findAsignaturas", query = "Select e from Carrera e"),
//    @NamedQuery(name = "Carrera.findAsignaturas", query = "Select c from Carrera c where c.nombre=:nombre")})
public class Carrera implements Serializable {

    @Id
    private Long codigo;

    @Basic
    @Column(unique = true)
    private String nombre;

//    @XmlTransient
    @OneToMany(fetch = FetchType.EAGER, targetEntity = Asignatura_Carrera.class, mappedBy = "carrera")
    private List<Asignatura_Carrera> asignatura_Carreras;

    /*@XmlTransient
    @ManyToMany(targetEntity = Usuario.class, mappedBy = "carreras")
    private List<Usuario> usuarios;*/

    @ManyToMany(targetEntity = Periodo_Examen.class)
    private List<Periodo_Examen> periodos_Examenes;

//    @ManyToMany(targetEntity = Asignatura.class)
//    private List<Asignatura> asignaturas;

    public Carrera(Long codigo, String nombre) {
        this.codigo = codigo;
        this.nombre = nombre;
    }

    public Carrera() {
    }

    public Long getCodigo() {
        return this.codigo;
    }

    public void setCodigo(Long codigo) {
        this.codigo = codigo;
    }

    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public List<Asignatura_Carrera> getAsignatura_Carreras() {
        return this.asignatura_Carreras;
    }

    public void setAsignatura_Carreras(List<Asignatura_Carrera> asignatura_Carreras) {
        this.asignatura_Carreras = asignatura_Carreras;
    }

    public List<Periodo_Examen> getPeriodos_Examenes() {
        return this.periodos_Examenes;
    }

    public void setPeriodos_Examenes(List<Periodo_Examen> periodos_Examenes) {
        this.periodos_Examenes = periodos_Examenes;
    }

    public void addAsignatura_Carrera(Asignatura_Carrera asignatura_Carreras){
        this.asignatura_Carreras.add(asignatura_Carreras);
    }
    
    
    public DtCarrera toDataType(){
        DtCarrera car = new DtCarrera(codigo, nombre);
        return car;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(this.codigo);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Carrera other = (Carrera) obj;
        if (!Objects.equals(this.codigo, other.codigo)) {
            return false;
        }
        return true;
    }

}
