/**
 * This file was generated by the JPA Modeler
 */
package com.miudelar.server.logic.entities;

import java.io.Serializable;
import java.sql.Date;
import java.util.List;
import java.util.Objects;
import javax.persistence.Basic;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.xml.bind.annotation.*;

/**
 * @author Windows XP
 */
//@XmlAccessorType(XmlAccessType.FIELD)
@Entity
public class Curso implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;
    
    @Basic
    private Date fecha;

    @XmlTransient
    @ManyToOne(targetEntity = Asignatura_Carrera.class)
    private Asignatura_Carrera asignatura_Carrera;

    @OneToMany(targetEntity = Horario.class)
    private List<Horario> horarios;

    @XmlTransient
    @OneToMany(targetEntity = Estudiante_Curso.class, fetch = FetchType.EAGER)
    private List<Estudiante_Curso> calificacionesCursos;

    @XmlTransient
    @ManyToMany(targetEntity = Usuario.class, mappedBy = "cursos", fetch = FetchType.EAGER)
    private List<Usuario> inscriptos;

    public Curso(Long id) {
        this.id = id;
    }

    public Curso() {
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

//    public Asignatura_Carrera getAsignatura_Carrera() {
//        return this.asignatura_Carrera;
//    }
//
//    public void setAsignatura_Carrera(Asignatura_Carrera asignatura_Carrera) {
//        this.asignatura_Carrera = asignatura_Carrera;
//    }

    public List<Horario> getHorarios() {
        return this.horarios;
    }

    public void setHorarios(List<Horario> horarios) {
        this.horarios = horarios;
    }

    public List<Estudiante_Curso> getCalificacionesCursos() {
        return this.calificacionesCursos;
    }

    public void setCalificacionesCursos(List<Estudiante_Curso> calificacionesCursos) {
        this.calificacionesCursos = calificacionesCursos;
    }

    public List<Usuario> getInscriptos() {
        return this.inscriptos;
    }

    public void setInscriptos(List<Usuario> inscriptos) {
        this.inscriptos = inscriptos;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 71 * hash + Objects.hashCode(this.id);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Curso other = (Curso) obj;
        if (!Objects.equals(this.id, other.id)) {
            return false;
        }
        return true;
    }
    
    

}
